#!/bin/bash

WINE_BOXES_DIR="$HOME/.wine_boxes"
mkdir -p "$WINE_BOXES_DIR"

# Função para validar nome de caixa
validate_box_name() {
    local box_name="$1"
    if [[ "$box_name" =~ [^a-zA-Z0-9_-] ]]; then
        echo "Erro: Nome da caixa contém caracteres inválidos. Use apenas letras, números, '-' e '_'."
        return 1
    fi
    return 0
}

# Criar nova caixa
create_box() {
    local box_name="$1"
    local box_type="$2"
    local box_path="$WINE_BOXES_DIR/$box_name"

    validate_box_name "$box_name" || return 1

    if [ -d "$box_path" ]; then
        echo "A caixa '$box_name' já existe. Escolha outro nome."
        return 1
    fi

    echo "Criando a caixa '$box_name' em '$box_path'..."
    mkdir -p "$box_path"
    WINEPREFIX="$box_path" wineboot -u

    # Se não for passado o tipo, perguntar interativamente
    if [ -z "$box_type" ]; then
        echo "Qual o tipo de caixa que você deseja criar?"
        echo "1) Jogos"
        echo "2) Aplicativos"
        echo "3) Personalizado"
        read -p "Escolha uma opção (1-3): " box_type
    fi

    case "$box_type" in
        1|j|J)
            echo "Configurando a caixa para jogos..."
            WINEPREFIX="$box_path" winetricks --unattended corefonts vcrun2022 d3dcompiler_43 d3dcompiler_47 d3dx9 dotnet40 dotnet452 dotnet462 dotnet472 dotnet48 physx xact xinput_43 quartz
            ;;
        2|a|A)
            echo "Configurando a caixa para aplicativos..."
            WINEPREFIX="$box_path" winetricks --unattended corefonts vcrun2022
            ;;
        3|p|P|*)
            echo "Criando caixa personalizada (sem configurações adicionais)."
            ;;
    esac

    echo "Caixa '$box_name' criada com sucesso!"
}

# Remover caixa
remove_box() {
    local box_name="$1"
    local box_path="$WINE_BOXES_DIR/$box_name"

    if [ ! -d "$box_path" ]; then
        echo "A caixa '$box_name' não existe."
        return 1
    fi

    echo "Atenção! A caixa '$box_name' será removida: $box_path"
    read -p "Tem certeza que deseja continuar? (s/N): " confirm
    if [[ "$confirm" =~ ^[Ss]$ ]]; then
        rm -rf "$box_path"
        echo "Caixa '$box_name' removida com sucesso!"
    else
        echo "Remoção cancelada."
    fi
}

# Listar caixas
list_boxes() {
    echo "Caixas Wine existentes:"
    if [ -z "$(ls -A "$WINE_BOXES_DIR")" ]; then
        echo "Nenhuma caixa Wine encontrada."
    else
        for box in "$WINE_BOXES_DIR"/*; do
            [ -d "$box" ] && echo -e "\e[32m- $(basename "$box")\e[0m"
        done
    fi
}

# Rodar exe em caixa específica
run_exe_in_box() {
    local box_name="$1"
    local exe_path="$2"
    local box_path="$WINE_BOXES_DIR/$box_name"
    local default_exe_file="$box_path/default_exe"

    if [ ! -d "$box_path" ]; then
        echo "Erro: A caixa '$box_name' não existe."
        list_boxes
        return 1
    fi

    # Se não passou exe_path, usar padrão
    if [ -z "$exe_path" ]; then
        if [ -f "$default_exe_file" ]; then
            exe_path=$(<"$default_exe_file")
            echo "Usando executável padrão: $exe_path"
        else
            echo "Erro: Nenhum executável foi especificado e não há padrão configurado."
            return 1
        fi
    fi

    if [ ! -f "$exe_path" ]; then
        echo "Erro: O arquivo '$exe_path' não foi encontrado."
        return 1
    fi

    echo "Executando '$exe_path' na caixa '$box_name'..."
    WINEPREFIX="$box_path" wine "$exe_path"
}

# Definir executável padrão para a caixa
set_default_exe() {
    local box_name="$1"
    local exe_path="$2"
    local box_path="$WINE_BOXES_DIR/$box_name"
    local default_exe_file="$box_path/default_exe"

    if [ ! -d "$box_path" ]; then
        echo "Erro: A caixa '$box_name' não existe."
        list_boxes
        return 1
    fi

    if [ -z "$exe_path" ]; then
        echo "Erro: É necessário fornecer o caminho do executável a ser definido como padrão."
        return 1
    fi

    if [ ! -f "$exe_path" ]; then
        echo "Erro: O arquivo '$exe_path' não foi encontrado."
        return 1
    fi

    echo "$exe_path" > "$default_exe_file"
    echo "Executável padrão para '$box_name' definido como '$exe_path'."
}
install_script_in_box() {
    local script_name="$1"
    TMPDIR=$(mktemp -d) || return 1
    # garantir subdiretório
    mkdir -p "$TMPDIR/$script_name"
    local script_file="$TMPDIR/$script_name/install.sh"
    local script_url="https://raw.githubusercontent.com/pedrodev2025/wine-manager-scripts-install-apps/main/scripts/$script_name/install.sh"

    echo "Baixando script de instalação de $script_url ..."
    if ! wget -q "$script_url" -O "$script_file"; then
        echo "Falha ao baixar script."
        rm -rf "$TMPDIR"
        return 1
    fi

    chmod +x "$script_file"

    bash "$script_file"
    local rc=$?

    rm -rf "$TMPDIR"

    if [ $rc -ne 0 ]; then
        echo "Falha no script de instalação (código $rc)."
        return $rc
    fi

    echo "Instalação via script concluída com sucesso!"
    return 0
}

# Mostrar ajuda
show_help() {
    echo "Uso: $0 [comando]"
    echo ""
    echo "Comandos disponíveis:"
    echo "  create <nome_da_caixa> [tipo]       Cria uma nova caixa Wine. Tipos: 1/j=Jogos, 2/a=Apps, 3/p=Personalizado"
    echo "  remove <nome_da_caixa>              Remove uma caixa Wine existente."
    echo "  list                                Lista todas as caixas Wine existentes."
    echo "  run <nome_da_caixa> [caminho_do_exe]  Executa um .exe usando uma caixa específica. Usa padrão se não especificado."
    echo "  set-default <nome_da_caixa> <exe>   Define o executável padrão da caixa."
    echo "  version                             Mostra a versão do Wine."
    echo "  help                                Mostra esta mensagem de ajuda."
    echo "  install-script                      Instala a partir de um script"
    echo ""
    echo "Exemplos:"
    echo "  $0 create meu_jogo 1"
    echo "  $0 remove meu_app"
    echo "  $0 list"
    echo "  $0 run meu_jogo ~/Downloads/SetupGame.exe"
    echo "  $0 run meu_jogo             # usa executável padrão"
    echo "  $0 set-default meu_jogo ~/Downloads/SetupGame.exe"
    echo "  $0 install-script npp"
    echo "  $0 version"
}

# Tratamento dos comandos
case "$1" in
    create)
        [ -z "$2" ] && { echo "Erro: você precisa fornecer um nome para a caixa."; show_help; exit 1; }
        create_box "$2" "$3"
        ;;
    remove)
        [ -z "$2" ] && { echo "Erro: você precisa fornecer o nome da caixa a ser removida."; show_help; exit 1; }
        remove_box "$2"
        ;;
    list)
        list_boxes
        ;;
    run)
        [ -z "$2" ] && { echo "Erro: você precisa fornecer o nome da caixa."; show_help; exit 1; }
        run_exe_in_box "$2" "$3"
        ;;
    set-default)
        [ -z "$2" ] || [ -z "$3" ] && { echo "Erro: você precisa fornecer o nome da caixa e o executável."; show_help; exit 1; }
        set_default_exe "$2" "$3"
        ;;
    version)
        wine --version
        ;;
    install-script)
    [ -z "$2" ] && { echo "Erro: você precisa fornecer o nome do script."; show_help; exit 1; }
    install_script_in_box "$2"
    ;;
    help|*)
        show_help
        ;;
esac
